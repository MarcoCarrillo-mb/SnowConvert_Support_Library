/******************************************************/
/****************** PERIOD UDFS ***********************/
/******************************************************/
----------
CREATE OR REPLACE FUNCTION PUBLIC.PERIOD_END_UDF(PERIOD_VAL VARCHAR(22))
RETURNS TIMESTAMP
AS
$$
 CAST(SUBSTR(PERIOD_VAL,POSITION('*',PERIOD_VAL)+1) AS TIMESTAMP)
$$;

----------
CREATE OR REPLACE FUNCTION PUBLIC.PERIOD_BEGIN_UDF(PERIOD_VAL VARCHAR(22))
RETURNS TIMESTAMP
AS
$$
 CAST(SUBSTR(PERIOD_VAL,1, POSITION('*',PERIOD_VAL)-1) AS TIMESTAMP)
$$;

CREATE OR REPLACE FUNCTION PUBLIC.PERIOD_LDIFF_UDF(PERIOD_1 VARCHAR(50), PERIOD_2 VARCHAR(50))
RETURNS VARCHAR
AS
$$
 CASE WHEN PUBLIC.PERIOD_OVERLAPS_UDF(PERIOD_2, PERIOD_1) = 'TRUE' 
            AND PUBLIC.PERIOD_BEGIN_UDF(PERIOD_1) < PUBLIC.PERIOD_BEGIN_UDF(PERIOD_2) 
       THEN
        SUBSTR(PERIOD_1,1, POSITION('*',PERIOD_1)-1) || '*' || SUBSTR(PERIOD_2,1, POSITION('*',PERIOD_2)-1)
       ELSE
         NULL
       END     
$$;

CREATE OR REPLACE FUNCTION PUBLIC.PERIOD_RDIFF_UDF(PERIOD_1 VARCHAR(50), PERIOD_2 VARCHAR(50))
RETURNS VARCHAR
AS
$$
CASE WHEN PUBLIC.PERIOD_OVERLAPS_UDF(PERIOD_2, PERIOD_1) = 'TRUE' 
            AND PUBLIC.PERIOD_END_UDF(PERIOD_1) > PUBLIC.PERIOD_END_UDF(PERIOD_2) 
       THEN
        SUBSTR(PERIOD_2,POSITION('*',PERIOD_2)+1) || '*' || SUBSTR(PERIOD_1,POSITION('*',PERIOD_1)+1)
       ELSE
         NULL
       END
$$;

CREATE OR REPLACE FUNCTION PUBLIC.PERIOD_OVERLAPS_UDF(PERIOD_1 VARCHAR(22), PERIOD_2 VARCHAR(22))
RETURNS BOOLEAN 
AS
$$
 CASE WHEN 
    (PUBLIC.PERIOD_END_UDF(PERIOD_1) >= PUBLIC.PERIOD_BEGIN_UDF(PERIOD_2) AND
     PUBLIC.PERIOD_BEGIN_UDF(PERIOD_1)  < PUBLIC.PERIOD_END_UDF(PERIOD_2))
    OR
    (PUBLIC.PERIOD_BEGIN_UDF(PERIOD_1) >= PUBLIC.PERIOD_BEGIN_UDF(PERIOD_2)AND
     PUBLIC.PERIOD_BEGIN_UDF(PERIOD_1) < PUBLIC.PERIOD_END_UDF(PERIOD_2)
    )
THEN
    TRUE
ELSE
    FALSE
END 
$$;
